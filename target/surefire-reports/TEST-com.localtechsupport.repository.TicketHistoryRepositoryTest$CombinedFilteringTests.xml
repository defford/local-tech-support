<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" version="3.0.2" name="com.localtechsupport.repository.TicketHistoryRepositoryTest$CombinedFilteringTests" time="10.984" tests="2" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="23"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/danielefford/Documents/SD12/04-DevOps/local-tech-support-server/target/test-classes:/Users/danielefford/Documents/SD12/04-DevOps/local-tech-support-server/target/classes:/Users/danielefford/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.5.0/spring-boot-starter-data-jpa-3.5.0.jar:/Users/danielefford/.m2/repository/org/springframework/boot/spring-boot-starter/3.5.0/spring-boot-starter-3.5.0.jar:/Users/danielefford/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.5.0/spring-boot-starter-logging-3.5.0.jar:/Users/danielefford/.m2/repository/ch/qos/logback/logback-classic/1.5.18/logback-classic-1.5.18.jar:/Users/danielefford/.m2/repository/ch/qos/logback/logback-core/1.5.18/logback-core-1.5.18.jar:/Users/danielefford/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.24.3/log4j-to-slf4j-2.24.3.jar:/Users/danielefford/.m2/repository/org/apache/logging/log4j/log4j-api/2.24.3/log4j-api-2.24.3.jar:/Users/danielefford/.m2/repository/org/slf4j/jul-to-slf4j/2.0.17/jul-to-slf4j-2.0.17.jar:/Users/danielefford/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/danielefford/.m2/repository/org/yaml/snakeyaml/2.4/snakeyaml-2.4.jar:/Users/danielefford/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.5.0/spring-boot-starter-jdbc-3.5.0.jar:/Users/danielefford/.m2/repository/com/zaxxer/HikariCP/6.3.0/HikariCP-6.3.0.jar:/Users/danielefford/.m2/repository/org/springframework/spring-jdbc/6.2.7/spring-jdbc-6.2.7.jar:/Users/danielefford/.m2/repository/org/hibernate/orm/hibernate-core/6.6.15.Final/hibernate-core-6.6.15.Final.jar:/Users/danielefford/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/danielefford/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/danielefford/.m2/repository/org/jboss/logging/jboss-logging/3.6.1.Final/jboss-logging-3.6.1.Final.jar:/Users/danielefford/.m2/repository/org/hibernate/common/hibernate-commons-annotations/7.0.3.Final/hibernate-commons-annotations-7.0.3.Final.jar:/Users/danielefford/.m2/repository/io/smallrye/jandex/3.2.0/jandex-3.2.0.jar:/Users/danielefford/.m2/repository/com/fasterxml/classmate/1.7.0/classmate-1.7.0.jar:/Users/danielefford/.m2/repository/net/bytebuddy/byte-buddy/1.17.5/byte-buddy-1.17.5.jar:/Users/danielefford/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/Users/danielefford/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/Users/danielefford/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/Users/danielefford/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/Users/danielefford/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/danielefford/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/danielefford/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/danielefford/.m2/repository/org/springframework/data/spring-data-jpa/3.5.0/spring-data-jpa-3.5.0.jar:/Users/danielefford/.m2/repository/org/springframework/data/spring-data-commons/3.5.0/spring-data-commons-3.5.0.jar:/Users/danielefford/.m2/repository/org/springframework/spring-orm/6.2.7/spring-orm-6.2.7.jar:/Users/danielefford/.m2/repository/org/springframework/spring-context/6.2.7/spring-context-6.2.7.jar:/Users/danielefford/.m2/repository/org/springframework/spring-aop/6.2.7/spring-aop-6.2.7.jar:/Users/danielefford/.m2/repository/org/springframework/spring-tx/6.2.7/spring-tx-6.2.7.jar:/Users/danielefford/.m2/repository/org/springframework/spring-beans/6.2.7/spring-beans-6.2.7.jar:/Users/danielefford/.m2/repository/org/slf4j/slf4j-api/2.0.17/slf4j-api-2.0.17.jar:/Users/danielefford/.m2/repository/org/springframework/spring-aspects/6.2.7/spring-aspects-6.2.7.jar:/Users/danielefford/.m2/repository/org/aspectj/aspectjweaver/1.9.24/aspectjweaver-1.9.24.jar:/Users/danielefford/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.5.0/spring-boot-starter-web-3.5.0.jar:/Users/danielefford/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.5.0/spring-boot-starter-json-3.5.0.jar:/Users/danielefford/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.19.0/jackson-databind-2.19.0.jar:/Users/danielefford/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.19.0/jackson-annotations-2.19.0.jar:/Users/danielefford/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.19.0/jackson-core-2.19.0.jar:/Users/danielefford/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.19.0/jackson-datatype-jdk8-2.19.0.jar:/Users/danielefford/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.19.0/jackson-datatype-jsr310-2.19.0.jar:/Users/danielefford/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.19.0/jackson-module-parameter-names-2.19.0.jar:/Users/danielefford/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.5.0/spring-boot-starter-tomcat-3.5.0.jar:/Users/danielefford/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.41/tomcat-embed-core-10.1.41.jar:/Users/danielefford/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.41/tomcat-embed-websocket-10.1.41.jar:/Users/danielefford/.m2/repository/org/springframework/spring-web/6.2.7/spring-web-6.2.7.jar:/Users/danielefford/.m2/repository/io/micrometer/micrometer-observation/1.15.0/micrometer-observation-1.15.0.jar:/Users/danielefford/.m2/repository/io/micrometer/micrometer-commons/1.15.0/micrometer-commons-1.15.0.jar:/Users/danielefford/.m2/repository/org/springframework/spring-webmvc/6.2.7/spring-webmvc-6.2.7.jar:/Users/danielefford/.m2/repository/org/springframework/spring-expression/6.2.7/spring-expression-6.2.7.jar:/Users/danielefford/.m2/repository/org/springframework/boot/spring-boot-devtools/3.5.0/spring-boot-devtools-3.5.0.jar:/Users/danielefford/.m2/repository/org/springframework/boot/spring-boot/3.5.0/spring-boot-3.5.0.jar:/Users/danielefford/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.5.0/spring-boot-autoconfigure-3.5.0.jar:/Users/danielefford/.m2/repository/com/h2database/h2/2.3.232/h2-2.3.232.jar:/Users/danielefford/.m2/repository/org/projectlombok/lombok/1.18.36/lombok-1.18.36.jar:/Users/danielefford/.m2/repository/com/mysql/mysql-connector-j/9.2.0/mysql-connector-j-9.2.0.jar:/Users/danielefford/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.5.0/spring-boot-starter-validation-3.5.0.jar:/Users/danielefford/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.41/tomcat-embed-el-10.1.41.jar:/Users/danielefford/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.2.Final/hibernate-validator-8.0.2.Final.jar:/Users/danielefford/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/danielefford/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.5.0/spring-boot-starter-test-3.5.0.jar:/Users/danielefford/.m2/repository/org/springframework/boot/spring-boot-test/3.5.0/spring-boot-test-3.5.0.jar:/Users/danielefford/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.5.0/spring-boot-test-autoconfigure-3.5.0.jar:/Users/danielefford/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/Users/danielefford/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/Users/danielefford/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/Users/danielefford/.m2/repository/net/minidev/json-smart/2.5.2/json-smart-2.5.2.jar:/Users/danielefford/.m2/repository/net/minidev/accessors-smart/2.5.2/accessors-smart-2.5.2.jar:/Users/danielefford/.m2/repository/org/ow2/asm/asm/9.7.1/asm-9.7.1.jar:/Users/danielefford/.m2/repository/org/assertj/assertj-core/3.27.3/assertj-core-3.27.3.jar:/Users/danielefford/.m2/repository/org/awaitility/awaitility/4.3.0/awaitility-4.3.0.jar:/Users/danielefford/.m2/repository/org/hamcrest/hamcrest/3.0/hamcrest-3.0.jar:/Users/danielefford/.m2/repository/org/junit/jupiter/junit-jupiter/5.12.2/junit-jupiter-5.12.2.jar:/Users/danielefford/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.12.2/junit-jupiter-api-5.12.2.jar:/Users/danielefford/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/danielefford/.m2/repository/org/junit/platform/junit-platform-commons/1.12.2/junit-platform-commons-1.12.2.jar:/Users/danielefford/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/danielefford/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.12.2/junit-jupiter-params-5.12.2.jar:/Users/danielefford/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.12.2/junit-jupiter-engine-5.12.2.jar:/Users/danielefford/.m2/repository/org/junit/platform/junit-platform-engine/1.12.2/junit-platform-engine-1.12.2.jar:/Users/danielefford/.m2/repository/org/mockito/mockito-core/5.17.0/mockito-core-5.17.0.jar:/Users/danielefford/.m2/repository/net/bytebuddy/byte-buddy-agent/1.17.5/byte-buddy-agent-1.17.5.jar:/Users/danielefford/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/danielefford/.m2/repository/org/mockito/mockito-junit-jupiter/5.17.0/mockito-junit-jupiter-5.17.0.jar:/Users/danielefford/.m2/repository/org/skyscreamer/jsonassert/1.5.3/jsonassert-1.5.3.jar:/Users/danielefford/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/danielefford/.m2/repository/org/springframework/spring-core/6.2.7/spring-core-6.2.7.jar:/Users/danielefford/.m2/repository/org/springframework/spring-jcl/6.2.7/spring-jcl-6.2.7.jar:/Users/danielefford/.m2/repository/org/springframework/spring-test/6.2.7/spring-test-6.2.7.jar:/Users/danielefford/.m2/repository/org/xmlunit/xmlunit-core/2.10.1/xmlunit-core-2.10.1.jar:/Users/danielefford/.m2/repository/com/unboundid/unboundid-ldapsdk/7.0.2/unboundid-ldapsdk-7.0.2.jar:"/>
    <property name="java.vm.vendor" value="Homebrew"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="user.timezone" value="America/St_Johns"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="23"/>
    <property name="APPLICATION_NAME" value="tech-support-server"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="CA"/>
    <property name="sun.boot.library.path" value="/opt/homebrew/Cellar/openjdk/23.0.2/libexec/openjdk.jdk/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/danielefford/Documents/SD12/04-DevOps/local-tech-support-server/target/surefire/surefirebooter-20250623121227149_3.jar /Users/danielefford/Documents/SD12/04-DevOps/local-tech-support-server/target/surefire 2025-06-23T12-12-26_981-jvmRun1 surefire-20250623121227149_1tmp surefire_0-20250623121227149_2tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="test" value="TicketHistoryRepositoryTest"/>
    <property name="surefire.test.class.path" value="/Users/danielefford/Documents/SD12/04-DevOps/local-tech-support-server/target/test-classes:/Users/danielefford/Documents/SD12/04-DevOps/local-tech-support-server/target/classes:/Users/danielefford/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.5.0/spring-boot-starter-data-jpa-3.5.0.jar:/Users/danielefford/.m2/repository/org/springframework/boot/spring-boot-starter/3.5.0/spring-boot-starter-3.5.0.jar:/Users/danielefford/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.5.0/spring-boot-starter-logging-3.5.0.jar:/Users/danielefford/.m2/repository/ch/qos/logback/logback-classic/1.5.18/logback-classic-1.5.18.jar:/Users/danielefford/.m2/repository/ch/qos/logback/logback-core/1.5.18/logback-core-1.5.18.jar:/Users/danielefford/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.24.3/log4j-to-slf4j-2.24.3.jar:/Users/danielefford/.m2/repository/org/apache/logging/log4j/log4j-api/2.24.3/log4j-api-2.24.3.jar:/Users/danielefford/.m2/repository/org/slf4j/jul-to-slf4j/2.0.17/jul-to-slf4j-2.0.17.jar:/Users/danielefford/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/danielefford/.m2/repository/org/yaml/snakeyaml/2.4/snakeyaml-2.4.jar:/Users/danielefford/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.5.0/spring-boot-starter-jdbc-3.5.0.jar:/Users/danielefford/.m2/repository/com/zaxxer/HikariCP/6.3.0/HikariCP-6.3.0.jar:/Users/danielefford/.m2/repository/org/springframework/spring-jdbc/6.2.7/spring-jdbc-6.2.7.jar:/Users/danielefford/.m2/repository/org/hibernate/orm/hibernate-core/6.6.15.Final/hibernate-core-6.6.15.Final.jar:/Users/danielefford/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/danielefford/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/danielefford/.m2/repository/org/jboss/logging/jboss-logging/3.6.1.Final/jboss-logging-3.6.1.Final.jar:/Users/danielefford/.m2/repository/org/hibernate/common/hibernate-commons-annotations/7.0.3.Final/hibernate-commons-annotations-7.0.3.Final.jar:/Users/danielefford/.m2/repository/io/smallrye/jandex/3.2.0/jandex-3.2.0.jar:/Users/danielefford/.m2/repository/com/fasterxml/classmate/1.7.0/classmate-1.7.0.jar:/Users/danielefford/.m2/repository/net/bytebuddy/byte-buddy/1.17.5/byte-buddy-1.17.5.jar:/Users/danielefford/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/Users/danielefford/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/Users/danielefford/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/Users/danielefford/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/Users/danielefford/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/danielefford/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/danielefford/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/danielefford/.m2/repository/org/springframework/data/spring-data-jpa/3.5.0/spring-data-jpa-3.5.0.jar:/Users/danielefford/.m2/repository/org/springframework/data/spring-data-commons/3.5.0/spring-data-commons-3.5.0.jar:/Users/danielefford/.m2/repository/org/springframework/spring-orm/6.2.7/spring-orm-6.2.7.jar:/Users/danielefford/.m2/repository/org/springframework/spring-context/6.2.7/spring-context-6.2.7.jar:/Users/danielefford/.m2/repository/org/springframework/spring-aop/6.2.7/spring-aop-6.2.7.jar:/Users/danielefford/.m2/repository/org/springframework/spring-tx/6.2.7/spring-tx-6.2.7.jar:/Users/danielefford/.m2/repository/org/springframework/spring-beans/6.2.7/spring-beans-6.2.7.jar:/Users/danielefford/.m2/repository/org/slf4j/slf4j-api/2.0.17/slf4j-api-2.0.17.jar:/Users/danielefford/.m2/repository/org/springframework/spring-aspects/6.2.7/spring-aspects-6.2.7.jar:/Users/danielefford/.m2/repository/org/aspectj/aspectjweaver/1.9.24/aspectjweaver-1.9.24.jar:/Users/danielefford/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.5.0/spring-boot-starter-web-3.5.0.jar:/Users/danielefford/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.5.0/spring-boot-starter-json-3.5.0.jar:/Users/danielefford/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.19.0/jackson-databind-2.19.0.jar:/Users/danielefford/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.19.0/jackson-annotations-2.19.0.jar:/Users/danielefford/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.19.0/jackson-core-2.19.0.jar:/Users/danielefford/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.19.0/jackson-datatype-jdk8-2.19.0.jar:/Users/danielefford/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.19.0/jackson-datatype-jsr310-2.19.0.jar:/Users/danielefford/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.19.0/jackson-module-parameter-names-2.19.0.jar:/Users/danielefford/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.5.0/spring-boot-starter-tomcat-3.5.0.jar:/Users/danielefford/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.41/tomcat-embed-core-10.1.41.jar:/Users/danielefford/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.41/tomcat-embed-websocket-10.1.41.jar:/Users/danielefford/.m2/repository/org/springframework/spring-web/6.2.7/spring-web-6.2.7.jar:/Users/danielefford/.m2/repository/io/micrometer/micrometer-observation/1.15.0/micrometer-observation-1.15.0.jar:/Users/danielefford/.m2/repository/io/micrometer/micrometer-commons/1.15.0/micrometer-commons-1.15.0.jar:/Users/danielefford/.m2/repository/org/springframework/spring-webmvc/6.2.7/spring-webmvc-6.2.7.jar:/Users/danielefford/.m2/repository/org/springframework/spring-expression/6.2.7/spring-expression-6.2.7.jar:/Users/danielefford/.m2/repository/org/springframework/boot/spring-boot-devtools/3.5.0/spring-boot-devtools-3.5.0.jar:/Users/danielefford/.m2/repository/org/springframework/boot/spring-boot/3.5.0/spring-boot-3.5.0.jar:/Users/danielefford/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.5.0/spring-boot-autoconfigure-3.5.0.jar:/Users/danielefford/.m2/repository/com/h2database/h2/2.3.232/h2-2.3.232.jar:/Users/danielefford/.m2/repository/org/projectlombok/lombok/1.18.36/lombok-1.18.36.jar:/Users/danielefford/.m2/repository/com/mysql/mysql-connector-j/9.2.0/mysql-connector-j-9.2.0.jar:/Users/danielefford/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.5.0/spring-boot-starter-validation-3.5.0.jar:/Users/danielefford/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.41/tomcat-embed-el-10.1.41.jar:/Users/danielefford/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.2.Final/hibernate-validator-8.0.2.Final.jar:/Users/danielefford/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/danielefford/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.5.0/spring-boot-starter-test-3.5.0.jar:/Users/danielefford/.m2/repository/org/springframework/boot/spring-boot-test/3.5.0/spring-boot-test-3.5.0.jar:/Users/danielefford/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.5.0/spring-boot-test-autoconfigure-3.5.0.jar:/Users/danielefford/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/Users/danielefford/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/Users/danielefford/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/Users/danielefford/.m2/repository/net/minidev/json-smart/2.5.2/json-smart-2.5.2.jar:/Users/danielefford/.m2/repository/net/minidev/accessors-smart/2.5.2/accessors-smart-2.5.2.jar:/Users/danielefford/.m2/repository/org/ow2/asm/asm/9.7.1/asm-9.7.1.jar:/Users/danielefford/.m2/repository/org/assertj/assertj-core/3.27.3/assertj-core-3.27.3.jar:/Users/danielefford/.m2/repository/org/awaitility/awaitility/4.3.0/awaitility-4.3.0.jar:/Users/danielefford/.m2/repository/org/hamcrest/hamcrest/3.0/hamcrest-3.0.jar:/Users/danielefford/.m2/repository/org/junit/jupiter/junit-jupiter/5.12.2/junit-jupiter-5.12.2.jar:/Users/danielefford/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.12.2/junit-jupiter-api-5.12.2.jar:/Users/danielefford/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/danielefford/.m2/repository/org/junit/platform/junit-platform-commons/1.12.2/junit-platform-commons-1.12.2.jar:/Users/danielefford/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/danielefford/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.12.2/junit-jupiter-params-5.12.2.jar:/Users/danielefford/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.12.2/junit-jupiter-engine-5.12.2.jar:/Users/danielefford/.m2/repository/org/junit/platform/junit-platform-engine/1.12.2/junit-platform-engine-1.12.2.jar:/Users/danielefford/.m2/repository/org/mockito/mockito-core/5.17.0/mockito-core-5.17.0.jar:/Users/danielefford/.m2/repository/net/bytebuddy/byte-buddy-agent/1.17.5/byte-buddy-agent-1.17.5.jar:/Users/danielefford/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/danielefford/.m2/repository/org/mockito/mockito-junit-jupiter/5.17.0/mockito-junit-jupiter-5.17.0.jar:/Users/danielefford/.m2/repository/org/skyscreamer/jsonassert/1.5.3/jsonassert-1.5.3.jar:/Users/danielefford/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/danielefford/.m2/repository/org/springframework/spring-core/6.2.7/spring-core-6.2.7.jar:/Users/danielefford/.m2/repository/org/springframework/spring-jcl/6.2.7/spring-jcl-6.2.7.jar:/Users/danielefford/.m2/repository/org/springframework/spring-test/6.2.7/spring-test-6.2.7.jar:/Users/danielefford/.m2/repository/org/xmlunit/xmlunit-core/2.10.1/xmlunit-core-2.10.1.jar:/Users/danielefford/.m2/repository/com/unboundid/unboundid-ldapsdk/7.0.2/unboundid-ldapsdk-7.0.2.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/danielefford"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-01-21"/>
    <property name="java.home" value="/opt/homebrew/Cellar/openjdk/23.0.2/libexec/openjdk.jdk/Contents/Home"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/danielefford/Documents/SD12/04-DevOps/local-tech-support-server"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="apple.awt.application.name" value="ForkedBooter"/>
    <property name="surefire.real.class.path" value="/Users/danielefford/Documents/SD12/04-DevOps/local-tech-support-server/target/surefire/surefirebooter-20250623121227149_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="23.0.2"/>
    <property name="user.name" value="danielefford"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="14.5"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Homebrew"/>
    <property name="localRepository" value="/Users/danielefford/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="java.io.tmpdir" value="/var/folders/31/ff4c8zz556b39j3nz1fsbr7c0000gn/T/"/>
    <property name="java.version" value="23.0.2"/>
    <property name="user.dir" value="/Users/danielefford/Documents/SD12/04-DevOps/local-tech-support-server"/>
    <property name="os.arch" value="aarch64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="64796"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/danielefford/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="java.vendor" value="Homebrew"/>
    <property name="java.vm.version" value="23.0.2"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.class.version" value="67.0"/>
    <property name="LOGGED_APPLICATION_NAME" value="[tech-support-server] "/>
  </properties>
  <testcase name="shouldFindHistoryByTicketAndCreatedBy" classname="com.localtechsupport.repository.TicketHistoryRepositoryTest$CombinedFilteringTests" time="0.647">
    <system-out><![CDATA[12:12:28.313 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.localtechsupport.repository.TicketHistoryRepositoryTest]: TicketHistoryRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
12:12:28.615 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.localtechsupport.TechSupportServerApplication for test class com.localtechsupport.repository.TicketHistoryRepositoryTest
12:12:28.653 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.localtechsupport.repository.TicketHistoryRepositoryTest$CombinedFilteringTests]: CombinedFilteringTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
12:12:28.663 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.localtechsupport.TechSupportServerApplication for test class com.localtechsupport.repository.TicketHistoryRepositoryTest$CombinedFilteringTests
12:12:28.737 [main] INFO org.springframework.boot.devtools.restart.RestartApplicationListener -- Restart disabled due to context in which it is running

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.5.0)

2025-06-23T12:12:29.291-02:30  INFO 64796 --- [tech-support-server] [           main] c.l.r.TicketHistoryRepositoryTest        : Starting TicketHistoryRepositoryTest using Java 23.0.2 with PID 64796 (started by danielefford in /Users/danielefford/Documents/SD12/04-DevOps/local-tech-support-server)
2025-06-23T12:12:29.327-02:30 DEBUG 64796 --- [tech-support-server] [           main] c.l.r.TicketHistoryRepositoryTest        : Running with Spring Boot v3.5.0, Spring v6.2.7
2025-06-23T12:12:29.344-02:30  INFO 64796 --- [tech-support-server] [           main] c.l.r.TicketHistoryRepositoryTest        : No active profile set, falling back to 1 default profile: "default"
2025-06-23T12:12:30.195-02:30  INFO 64796 --- [tech-support-server] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-23T12:12:30.848-02:30  INFO 64796 --- [tech-support-server] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 598 ms. Found 7 JPA repository interfaces.
2025-06-23T12:12:31.343-02:30  INFO 64796 --- [tech-support-server] [           main] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2025-06-23T12:12:31.840-02:30  INFO 64796 --- [tech-support-server] [           main] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:4232812e-507b-48b1-af76-cce4cd51ff3e;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2025-06-23T12:12:33.591-02:30  INFO 64796 --- [tech-support-server] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-23T12:12:33.917-02:30  INFO 64796 --- [tech-support-server] [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-23T12:12:34.050-02:30  INFO 64796 --- [tech-support-server] [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-23T12:12:35.342-02:30  INFO 64796 --- [tech-support-server] [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-23T12:12:35.427-02:30  WARN 64796 --- [tech-support-server] [           main] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-23T12:12:35.457-02:30  INFO 64796 --- [tech-support-server] [           main] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@6b2ef50e']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-23T12:12:36.533-02:30  INFO 64796 --- [tech-support-server] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-23T12:12:36.550-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    drop table if exists appointments cascade 
Hibernate: 
    drop table if exists appointments cascade 
2025-06-23T12:12:36.553-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    drop table if exists clients cascade 
Hibernate: 
    drop table if exists clients cascade 
2025-06-23T12:12:36.553-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    drop table if exists feedback_entries cascade 
Hibernate: 
    drop table if exists feedback_entries cascade 
2025-06-23T12:12:36.553-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    drop table if exists technician_skills cascade 
Hibernate: 
    drop table if exists technician_skills cascade 
2025-06-23T12:12:36.554-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    drop table if exists technicians cascade 
Hibernate: 
    drop table if exists technicians cascade 
2025-06-23T12:12:36.554-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    drop table if exists ticket_history cascade 
Hibernate: 
    drop table if exists ticket_history cascade 
2025-06-23T12:12:36.554-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    drop table if exists tickets cascade 
Hibernate: 
    drop table if exists tickets cascade 
2025-06-23T12:12:36.557-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    create table appointments (
        status tinyint not null check (status between 0 and 5),
        created_at timestamp(6) with time zone not null,
        end_time timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        start_time timestamp(6) with time zone not null,
        technician_id bigint not null,
        ticket_id bigint not null,
        updated_at timestamp(6) with time zone not null,
        primary key (id)
    )
Hibernate: 
    create table appointments (
        status tinyint not null check (status between 0 and 5),
        created_at timestamp(6) with time zone not null,
        end_time timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        start_time timestamp(6) with time zone not null,
        technician_id bigint not null,
        ticket_id bigint not null,
        updated_at timestamp(6) with time zone not null,
        primary key (id)
    )
2025-06-23T12:12:36.569-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    create table clients (
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        phone varchar(20),
        first_name varchar(50) not null,
        last_name varchar(50) not null,
        email varchar(100) not null unique,
        notes varchar(500),
        address varchar(255),
        status enum ('ACTIVE','INACTIVE','SUSPENDED') not null,
        primary key (id)
    )
Hibernate: 
    create table clients (
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        phone varchar(20),
        first_name varchar(50) not null,
        last_name varchar(50) not null,
        email varchar(100) not null unique,
        notes varchar(500),
        address varchar(255),
        status enum ('ACTIVE','INACTIVE','SUSPENDED') not null,
        primary key (id)
    )
2025-06-23T12:12:36.571-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    create table feedback_entries (
        rating integer not null,
        id bigint generated by default as identity,
        submitted_at timestamp(6) with time zone not null,
        ticket_id bigint not null,
        comment varchar(255) not null,
        created_by varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table feedback_entries (
        rating integer not null,
        id bigint generated by default as identity,
        submitted_at timestamp(6) with time zone not null,
        ticket_id bigint not null,
        comment varchar(255) not null,
        created_by varchar(255) not null,
        primary key (id)
    )
2025-06-23T12:12:36.572-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    create table technician_skills (
        id bigint generated by default as identity,
        technician_id bigint not null,
        service_type enum ('HARDWARE','SOFTWARE') not null,
        primary key (id)
    )
Hibernate: 
    create table technician_skills (
        id bigint generated by default as identity,
        technician_id bigint not null,
        service_type enum ('HARDWARE','SOFTWARE') not null,
        primary key (id)
    )
2025-06-23T12:12:36.573-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    create table technicians (
        id bigint generated by default as identity,
        email varchar(255) not null unique,
        full_name varchar(255) not null,
        status enum ('ACTIVE','INACTIVE','IN_TRAINING','ON_VACATION','TERMINATED'),
        primary key (id)
    )
Hibernate: 
    create table technicians (
        id bigint generated by default as identity,
        email varchar(255) not null unique,
        full_name varchar(255) not null,
        status enum ('ACTIVE','INACTIVE','IN_TRAINING','ON_VACATION','TERMINATED'),
        primary key (id)
    )
2025-06-23T12:12:36.575-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    create table ticket_history (
        status tinyint not null check (status between 0 and 1),
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        ticket_id bigint not null,
        updated_at timestamp(6) with time zone not null,
        created_by varchar(255) not null,
        description varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table ticket_history (
        status tinyint not null check (status between 0 and 1),
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        ticket_id bigint not null,
        updated_at timestamp(6) with time zone not null,
        created_by varchar(255) not null,
        description varchar(255) not null,
        primary key (id)
    )
2025-06-23T12:12:36.576-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    create table tickets (
        client_id bigint not null,
        created_at timestamp(6) with time zone not null,
        due_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        technician_id bigint,
        description varchar(1000) not null,
        service_type enum ('HARDWARE','SOFTWARE') not null,
        status enum ('CLOSED','OPEN') not null,
        primary key (id)
    )
Hibernate: 
    create table tickets (
        client_id bigint not null,
        created_at timestamp(6) with time zone not null,
        due_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        technician_id bigint,
        description varchar(1000) not null,
        service_type enum ('HARDWARE','SOFTWARE') not null,
        status enum ('CLOSED','OPEN') not null,
        primary key (id)
    )
2025-06-23T12:12:36.577-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    alter table if exists appointments 
       add constraint FK4wof45dihv1xh501qj9ahrrlh 
       foreign key (technician_id) 
       references technicians
Hibernate: 
    alter table if exists appointments 
       add constraint FK4wof45dihv1xh501qj9ahrrlh 
       foreign key (technician_id) 
       references technicians
2025-06-23T12:12:36.585-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    alter table if exists appointments 
       add constraint FKqytkgawwncn3y28njc50ofwk3 
       foreign key (ticket_id) 
       references tickets
Hibernate: 
    alter table if exists appointments 
       add constraint FKqytkgawwncn3y28njc50ofwk3 
       foreign key (ticket_id) 
       references tickets
2025-06-23T12:12:36.586-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    alter table if exists feedback_entries 
       add constraint FK6c7lxa1vnyye0rcxte7oom3oq 
       foreign key (ticket_id) 
       references tickets
Hibernate: 
    alter table if exists feedback_entries 
       add constraint FK6c7lxa1vnyye0rcxte7oom3oq 
       foreign key (ticket_id) 
       references tickets
2025-06-23T12:12:36.587-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    alter table if exists technician_skills 
       add constraint FKrs9apsy55oobamg2fxof35o2t 
       foreign key (technician_id) 
       references technicians
Hibernate: 
    alter table if exists technician_skills 
       add constraint FKrs9apsy55oobamg2fxof35o2t 
       foreign key (technician_id) 
       references technicians
2025-06-23T12:12:36.588-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    alter table if exists ticket_history 
       add constraint FKkkhg6aquudxfcbofalx8rtc6v 
       foreign key (ticket_id) 
       references tickets
Hibernate: 
    alter table if exists ticket_history 
       add constraint FKkkhg6aquudxfcbofalx8rtc6v 
       foreign key (ticket_id) 
       references tickets
2025-06-23T12:12:36.589-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    alter table if exists tickets 
       add constraint FK1joe31w99hq84nhwci5lool5u 
       foreign key (technician_id) 
       references technicians
Hibernate: 
    alter table if exists tickets 
       add constraint FK1joe31w99hq84nhwci5lool5u 
       foreign key (technician_id) 
       references technicians
2025-06-23T12:12:36.592-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    alter table if exists tickets 
       add constraint FKlupqyilgsx29jeu9ad1ib5y85 
       foreign key (client_id) 
       references clients
Hibernate: 
    alter table if exists tickets 
       add constraint FKlupqyilgsx29jeu9ad1ib5y85 
       foreign key (client_id) 
       references clients
2025-06-23T12:12:36.596-02:30  INFO 64796 --- [tech-support-server] [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-23T12:12:36.900-02:30  INFO 64796 --- [tech-support-server] [           main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-23T12:12:38.948-02:30  INFO 64796 --- [tech-support-server] [           main] c.l.r.TicketHistoryRepositoryTest        : Started TicketHistoryRepositoryTest in 10.223 seconds (process running for 11.651)
2025-06-23T12:12:39.430-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    select
        th1_0.id,
        th1_0.created_at,
        th1_0.created_by,
        th1_0.description,
        th1_0.status,
        th1_0.ticket_id,
        th1_0.updated_at 
    from
        ticket_history th1_0
Hibernate: 
    select
        th1_0.id,
        th1_0.created_at,
        th1_0.created_by,
        th1_0.description,
        th1_0.status,
        th1_0.ticket_id,
        th1_0.updated_at 
    from
        ticket_history th1_0
2025-06-23T12:12:39.489-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    insert 
    into
        clients
        (address, created_at, email, first_name, last_name, notes, phone, status, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        clients
        (address, created_at, email, first_name, last_name, notes, phone, status, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-06-23T12:12:39.509-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    insert 
    into
        technicians
        (email, full_name, status, id) 
    values
        (?, ?, ?, default)
Hibernate: 
    insert 
    into
        technicians
        (email, full_name, status, id) 
    values
        (?, ?, ?, default)
2025-06-23T12:12:39.516-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    insert 
    into
        tickets
        (technician_id, client_id, created_at, description, due_at, service_type, status, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        tickets
        (technician_id, client_id, created_at, description, due_at, service_type, status, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-06-23T12:12:39.522-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    insert 
    into
        tickets
        (technician_id, client_id, created_at, description, due_at, service_type, status, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        tickets
        (technician_id, client_id, created_at, description, due_at, service_type, status, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-06-23T12:12:39.524-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    insert 
    into
        ticket_history
        (created_at, created_by, description, status, ticket_id, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        ticket_history
        (created_at, created_by, description, status, ticket_id, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-06-23T12:12:39.526-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    insert 
    into
        ticket_history
        (created_at, created_by, description, status, ticket_id, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        ticket_history
        (created_at, created_by, description, status, ticket_id, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-06-23T12:12:39.527-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    insert 
    into
        ticket_history
        (created_at, created_by, description, status, ticket_id, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        ticket_history
        (created_at, created_by, description, status, ticket_id, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-06-23T12:12:39.541-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    select
        th1_0.id,
        th1_0.created_at,
        th1_0.created_by,
        th1_0.description,
        th1_0.status,
        th1_0.ticket_id,
        th1_0.updated_at 
    from
        ticket_history th1_0 
    where
        th1_0.ticket_id=? 
        and th1_0.created_by=? 
    fetch
        first ? rows only
Hibernate: 
    select
        th1_0.id,
        th1_0.created_at,
        th1_0.created_by,
        th1_0.description,
        th1_0.status,
        th1_0.ticket_id,
        th1_0.updated_at 
    from
        ticket_history th1_0 
    where
        th1_0.ticket_id=? 
        and th1_0.created_by=? 
    fetch
        first ? rows only
2025-06-23T12:12:39.545-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    select
        t1_0.id,
        at1_0.id,
        at1_0.email,
        at1_0.full_name,
        at1_0.status,
        t1_0.client_id,
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.email,
        c1_0.first_name,
        c1_0.last_name,
        c1_0.notes,
        c1_0.phone,
        c1_0.status,
        c1_0.updated_at,
        t1_0.created_at,
        t1_0.description,
        t1_0.due_at,
        t1_0.service_type,
        t1_0.status 
    from
        tickets t1_0 
    left join
        technicians at1_0 
            on at1_0.id=t1_0.technician_id 
    join
        clients c1_0 
            on c1_0.id=t1_0.client_id 
    where
        t1_0.id=?
Hibernate: 
    select
        t1_0.id,
        at1_0.id,
        at1_0.email,
        at1_0.full_name,
        at1_0.status,
        t1_0.client_id,
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.email,
        c1_0.first_name,
        c1_0.last_name,
        c1_0.notes,
        c1_0.phone,
        c1_0.status,
        c1_0.updated_at,
        t1_0.created_at,
        t1_0.description,
        t1_0.due_at,
        t1_0.service_type,
        t1_0.status 
    from
        tickets t1_0 
    left join
        technicians at1_0 
            on at1_0.id=t1_0.technician_id 
    join
        clients c1_0 
            on c1_0.id=t1_0.client_id 
    where
        t1_0.id=?
]]></system-out>
    <system-err><![CDATA[Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build as described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org.mockito/org/mockito/Mockito.html#0.3
WARNING: A Java agent has been loaded dynamically (/Users/danielefford/.m2/repository/net/bytebuddy/byte-buddy-agent/1.17.5/byte-buddy-agent-1.17.5.jar)
WARNING: If a serviceability tool is in use, please run with -XX:+EnableDynamicAgentLoading to hide this warning
WARNING: If a serviceability tool is not in use, please run with -Djdk.instrument.traceUsage for more information
WARNING: Dynamic loading of agents will be disallowed by default in a future release
]]></system-err>
  </testcase>
  <testcase name="shouldCountHistoryByTicketAndStatus" classname="com.localtechsupport.repository.TicketHistoryRepositoryTest$CombinedFilteringTests" time="0.024">
    <system-out><![CDATA[2025-06-23T12:12:39.610-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    select
        th1_0.id,
        th1_0.created_at,
        th1_0.created_by,
        th1_0.description,
        th1_0.status,
        th1_0.ticket_id,
        th1_0.updated_at 
    from
        ticket_history th1_0
Hibernate: 
    select
        th1_0.id,
        th1_0.created_at,
        th1_0.created_by,
        th1_0.description,
        th1_0.status,
        th1_0.ticket_id,
        th1_0.updated_at 
    from
        ticket_history th1_0
2025-06-23T12:12:39.612-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    insert 
    into
        clients
        (address, created_at, email, first_name, last_name, notes, phone, status, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        clients
        (address, created_at, email, first_name, last_name, notes, phone, status, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-06-23T12:12:39.613-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    insert 
    into
        technicians
        (email, full_name, status, id) 
    values
        (?, ?, ?, default)
Hibernate: 
    insert 
    into
        technicians
        (email, full_name, status, id) 
    values
        (?, ?, ?, default)
2025-06-23T12:12:39.615-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    insert 
    into
        tickets
        (technician_id, client_id, created_at, description, due_at, service_type, status, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        tickets
        (technician_id, client_id, created_at, description, due_at, service_type, status, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-06-23T12:12:39.616-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    insert 
    into
        tickets
        (technician_id, client_id, created_at, description, due_at, service_type, status, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        tickets
        (technician_id, client_id, created_at, description, due_at, service_type, status, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-06-23T12:12:39.617-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    insert 
    into
        ticket_history
        (created_at, created_by, description, status, ticket_id, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        ticket_history
        (created_at, created_by, description, status, ticket_id, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-06-23T12:12:39.618-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    insert 
    into
        ticket_history
        (created_at, created_by, description, status, ticket_id, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        ticket_history
        (created_at, created_by, description, status, ticket_id, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-06-23T12:12:39.619-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    insert 
    into
        ticket_history
        (created_at, created_by, description, status, ticket_id, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        ticket_history
        (created_at, created_by, description, status, ticket_id, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-06-23T12:12:39.623-02:30 DEBUG 64796 --- [tech-support-server] [           main] org.hibernate.SQL                        : 
    select
        count(th1_0.id) 
    from
        ticket_history th1_0 
    where
        th1_0.ticket_id=? 
        and th1_0.status=?
Hibernate: 
    select
        count(th1_0.id) 
    from
        ticket_history th1_0 
    where
        th1_0.ticket_id=? 
        and th1_0.status=?
]]></system-out>
  </testcase>
</testsuite>